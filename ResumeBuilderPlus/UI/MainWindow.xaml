<Window x:Class="ResumeBuilderPlus.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:vvm="clr-namespace:ResumeBuilderPlus.VVM"
        xmlns:ui="clr-namespace:ResumeBuilderPlus.UI"
        Title="ResumeBuilder+" Height="350" Width="525">

    <Window.DataContext>
        <vvm:Presenter/>
    </Window.DataContext>
    
    <Grid>
        <TabControl Margin="10,10,10,43">
            <TabItem Header="Personal Info" DataContext="{Binding Resume.PersonalInfo}">
                <StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        
                        <Label Grid.Column="0" Grid.Row="0">First Name</Label>
                        <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding NameFirst}"/>

                        <Label Grid.Column="0" Grid.Row="1">Family Name</Label>
                        <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding NameLast}"/>

                        <Label Grid.Column="0" Grid.Row="2">Address (Local)</Label>
                        <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding AddressLocal}"/>
                        <CheckBox Grid.Column="2" Grid.Row="2" VerticalContentAlignment="Center"  IsChecked="{Binding AddressLocalDisplay, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label Grid.Column="0" Grid.Row="3">Address (Regional)</Label>
                        <TextBox Grid.Column="1" Grid.Row="3" Text="{Binding AddressRegional}"/>
                        <CheckBox Grid.Column="2" Grid.Row="3" VerticalContentAlignment="Center" IsChecked="{Binding AddressRegionalDisplay, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label Grid.Column="0" Grid.Row="4">Phone</Label>
                        <TextBox Grid.Column="1" Grid.Row="4" Text="{Binding Phone}"/>
                        <CheckBox Grid.Column="2" Grid.Row="4" VerticalContentAlignment="Center" IsChecked="{Binding PhoneDisplay, UpdateSourceTrigger=PropertyChanged}"/>

                        <Label Grid.Column="0" Grid.Row="5">Email Address</Label>
                        <TextBox Grid.Column="1" Grid.Row="5" Text="{Binding Email}"/>
                        <CheckBox Grid.Column="2" Grid.Row="5" VerticalContentAlignment="Center" IsChecked="{Binding EmailDisplay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Grid>
                </StackPanel>
            </TabItem>
            <TabItem Header="Qualifications">
                <Grid>
                    <ScrollViewer>
                        <StackPanel>
                            <Expander Header="Education">
                                <ui:EducationControl/>
                            </Expander>
                            <Expander Header="Experience">
                                <ui:ExperienceControl/>
                            </Expander>
                            <Expander Header="Projects">
                                <ui:ProjectsControl/>
                            </Expander>
                            <Expander Header="Skills">
                                <ui:SkillsControl/>
                            </Expander>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>
            </TabItem>
            <TabItem Header="Tags">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    
                    <DockPanel Grid.Column="0">
                        <Grid DockPanel.Dock="Bottom">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="0" Command="{Binding ParseCommand}">Parse</Button>
                            <Button Grid.Column="1" Command="{Binding SelectAllTagsCommand}">Select All</Button>
                            <Button Grid.Column="2" Command="{Binding DeselectAllTagsCommand}">Deselect All</Button>
                        </Grid>
                        <AdornerDecorator>
                            <TextBox TextWrapping="Wrap" AcceptsReturn="True" ui:CueBannerService.CueBanner="Job description/relevant information" Text="{Binding JobRequirements, UpdateSourceTrigger=PropertyChanged}"/>
                        </AdornerDecorator>
                    </DockPanel>
                    
                    <ListView Grid.Column="1" ItemsSource="{Binding ParsedTags, UpdateSourceTrigger=PropertyChanged}">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <WrapPanel>
                                    <CheckBox IsChecked="{Binding Bool, UpdateSourceTrigger=PropertyChanged}"/>
                                    <TextBlock Text="{Binding Text}"/>
                                </WrapPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>
            </TabItem>
            <TabItem Header="Cover Letter">
                <DockPanel>
                    <Button DockPanel.Dock="Bottom" Click="ButtonBase_OnClick">Insert from template</Button>
                    <AdornerDecorator>
                        <vvm:SelectionBindingTextBox TextWrapping="Wrap" AcceptsReturn="True" ui:CueBannerService.CueBanner="Cover letter" Text="{Binding Resume.CoverLetter.Text}"/>
                    </AdornerDecorator>
                </DockPanel>
            </TabItem>
            <TabItem Header="Formatting" DataContext="{Binding Resume.Format}">
                <StackPanel>
                    <Expander Header="Colors">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Label Grid.Column="0" Grid.Row="0">Text Color</Label>
                            <xctk:ColorPicker Grid.Column="1" Grid.Row="0" SelectedColor="{Binding Color0, UpdateSourceTrigger=PropertyChanged}"/>
                            <Label Grid.Column="0" Grid.Row="1">Primary Color</Label>
                            <xctk:ColorPicker Grid.Column="1" Grid.Row="1" SelectedColor="{Binding Color1, UpdateSourceTrigger=PropertyChanged}"/>
                            <Label Grid.Column="0" Grid.Row="2">Secondary Color</Label>
                            <xctk:ColorPicker Grid.Column="1" Grid.Row="2" SelectedColor="{Binding Color2, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </Expander>
                    <Expander Header="Spacing">
                        <StackPanel>
                            <CheckBox IsChecked="{Binding ProjectYearsNewline}">Display project years on new line</CheckBox>
                            <DockPanel>
                                <TextBox Text="{Binding ElementName=SliderCvitemSpacing, Path=Value, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:0.00}}" DockPanel.Dock="Right" TextAlignment="Right" Width="40"/>
                                <Label>
                                    -1.50em
                                    <Label.ToolTip>
                                        <Image Source="{Binding MinimumCvitemSpacingImage}"/>
                                    </Label.ToolTip>
                                </Label>
                                <Label DockPanel.Dock="Right">
                                    0.00em
                                    <Label.ToolTip>
                                        <Image Source="{Binding MaximumCvitemSpacingImage}"/>
                                    </Label.ToolTip>
                                </Label>
                                <Slider Minimum="-1.5" Maximum="0" TickPlacement="BottomRight" TickFrequency="0.05" IsSnapToTickEnabled="True" Value="{Binding CvitemSpacing, UpdateSourceTrigger=PropertyChanged}" Name="SliderCvitemSpacing"/>
                            </DockPanel>
                        </StackPanel>
                    </Expander>
                    <Expander Header="Document">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            
                            <TextBlock Grid.Column="0" Grid.Row="0">Layout Style</TextBlock>
                            <DockPanel Grid.Column="1" Grid.Row="0">
                                <ComboBox ItemsSource="{Binding LayoutStyles}" SelectedItem="{Binding SelectedLayoutStyle, UpdateSourceTrigger=PropertyChanged}"/>
                            </DockPanel>
                            <TextBlock Grid.Column="0" Grid.Row="1">Border Width</TextBlock>
                            <DockPanel Grid.Column="1" Grid.Row="1">
                                <TextBox Text="{Binding ElementName=SliderBorderWidth, Path=Value, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:0%}}" DockPanel.Dock="Right" TextAlignment="Right" Width="40"/>
                                <Label>
                                    0%
                                    <Label.ToolTip>
                                        <Image Source="{Binding MinimumCvitemSpacingImage}"/>
                                    </Label.ToolTip>
                                </Label>
                                <Label DockPanel.Dock="Right">
                                    100%
                                    <Label.ToolTip>
                                        <Image Source="{Binding MaximumCvitemSpacingImage}"/>
                                    </Label.ToolTip>
                                </Label>
                                <Slider Minimum="0" Maximum="1" TickPlacement="BottomRight" TickFrequency="0.05" IsSnapToTickEnabled="True" Value="{Binding Borders, UpdateSourceTrigger=PropertyChanged}" Name="SliderBorderWidth"/>
                            </DockPanel>
                        </Grid>
                    </Expander>
                </StackPanel>
            </TabItem>
        </TabControl>
        <Button Content="Write" HorizontalAlignment="Right" Margin="0,0,170,10" Width="75" Height="28" VerticalAlignment="Bottom" Command="{Binding WriteCommand}"/>
        <Button Content="Load" HorizontalAlignment="Right" Margin="0,0,90,10" Width="75" Height="28" VerticalAlignment="Bottom" Command="{Binding LoadCommand}"/>
        <Button Content="Save" HorizontalAlignment="Right" Width="75" Height="28" VerticalAlignment="Bottom" Margin="0,0,10,10" Command="{Binding SaveCommand}"/>
    </Grid>
</Window>
